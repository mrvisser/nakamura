#
#  Licensed to the Apache Software Foundation (ASF) under one
#  or more contributor license agreements.  See the NOTICE file
#  distributed with this work for additional information
#  regarding copyright ownership.  The ASF licenses this file
#  to you under the Apache License, Version 2.0 (the
#  "License"); you may not use this file except in compliance
#  with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing,
#  software distributed under the License is distributed on an
#  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
#  KIND, either express or implied.  See the License for the
#  specific language governing permissions and limitations
#  under the License.
#
org.sakaiproject.nakamura.http.i18n.I18nFilter.name = Sakai Nakamura :: \
 Internationalization (i18n) Filter
org.sakaiproject.nakamura.http.i18n.I18nFilter.description = Servlet filter to transform \
 message keys in static files into i18n messages before getting to the client.
sakai.filter.i18n.pattern.name = Resource Filter Pattern
sakai.filter.i18n.pattern.description = Pattern of resources to filter the content of. 
sakai.filter.i18n.bundles.path.name = Bundles Path
sakai.filter.i18n.bundles.path.description = Path in JCR to start at when looking for \
 language bundles.
sakai.filter.i18n.message_key.pattern.name = Message Key Pattern
sakai.filter.i18n.message_key.pattern.description = Pattern used to look for message keys.
sakai.filter.i18n.message_key.show_missing.name = Show missing keys message?
sakai.filter.i18n.message_key.show_missing.description = Whether to show a missing key \
 message in the output (true) or to leave the field empty.
 
 
org.sakaiproject.nakamura.http.usercontent.ServerProtectionServiceImpl.name = Sakai \
 Nakamura :: Server Protection Service
org.sakaiproject.nakamura.http.usercontent.ServerProtectionServiceImpl.description = \
 Distinguishes application content from untrusted user-uploaded content to prevent cross-site scripting. \
 Blocks POSTs from unknown referers.
disable.protection.for.dev.mode.name = Disable Protection for dev mode.
disable.protection.for.dev.mode.description = Set to true to disable all server protection. Only do this on developer machines, \
 never do this in pilot, QA or production.
untrusted.contenturl.name = Untrusted Content URL
untrusted.contenturl.description = The protocol, domain, and port for streaming untrusted content. \
 This will be the URL of the request as delivered to the application, possibly through a proxy. \
 If delivered ia a proxy this is the stub URL that the Jetty instnace sees and not the URL that the \
 proxy sees.
untrusted.redirect.host.name = Untrusted Content Redirect Host
untrusted.redirect.host.description = The protocol, domain, and port to which requests for \
 streaming uploaded content will be redirected. This is the redirect URL as sent to the browser. \
 By default it is the same as the Untrusted Content Host.
trusted.exact.paths.name = Trusted Content Paths, exact
trusted.exact.paths.description = Resources that match these paths exactly can be served from the trusted host.
trusted.paths.name = Trusted Content Paths
trusted.paths.description = Resources that start with these paths can be served from the trusted host.
trusted.referer.name = Trusted referrer
trusted.referer.description = If the Referrer header starts with these paths, POST operations are accepted, http does not include \
 the port 80, https does not include the port 443, otherwise you must include the port.
trusted.hosts.name = Trusted Hosts
trusted.hosts.description = List of key/value pairs in the form "trustedHostHeader = untrustedRedirectURL"; \
 for example "server.com = https://server.com:8443"
trusted.secret.name = Trusted Secret
trusted.secret.description = The Server secret used to encrypt tokens that are used to transfer identity from the trusted host to \
 the user content host. Must be the same on all nodes in a cluster.
trusted.postwhitelist.name = Trusted POST Whitelist
trusted.postwhitelist.description = Paths which can receive POST requests from any referer and on any host.
trusted.anonpostwhitelist.name = Trusted Anonymous POST Whitelist
trusted.anonpostwhitelist.description = List of paths that accept POST requests without authentication. \
 Other POST requests are denied to anonymous sessions.

dynamiccontentresponsecache.name = Sakai Nakamura :: Dynamic Content Response Cache
dynamiccontentresponsecache.description = Used to prompt browsers to cache http responses that are \
  for dynamic, user-specific content. The caching mechanism is ETag validation. If the client \
  presents a fresh ETag in the http If-None-Match header, the server will return HTTP 304 Not Modified. \
  Appropriate for dynamic content that varies by user and which may change without warning.
disable.cache.for.dev.mode.name = Disable Cache for Dev Mode
disable.cache.for.dev.mode.description = When selected, disables the cache \
  completely. Disabling cache is not recommended in a production environment.
bypass.cache.for.localhost.name = Bypass cache for http://localhost
bypass.cache.for.localhost.description = When selected, dynamic content caching will be disabled \
  for requests made to 'localhost' and '127.0.0.1', but enabled for all other hosts. Useful for developers.
staticcontentresponsecache.name = Sakai Nakamura :: Static Content Response Cache
staticcontentresponsecache.description = Used to prompt browsers to cache HTTP responses using \
  the HTTP Expires header, which will cause the client not to request a cached file until the \
  Expires date is reached. Appropriate for static content that is the same for all users.
filter.priority.name = Filter Priority
filter.priority.description = Priority of this filter. A higher number means sooner in the filter chain.
sakai.cache.paths.name = Exact paths to cache
sakai.cache.paths.description = A list of exact paths to cache and their expiration time, in seconds. \
  Setting expiration time to 0 makes it non-caching.
sakai.cache.patterns.name = Regex patterns to cache
sakai.cache.patterns.description = List of path prefixes followed by a regex, followed by the \
  expiration time in seconds for this pattern. If the prefix starts with "root:" it means files in \
  the root folder that match the pattern.
